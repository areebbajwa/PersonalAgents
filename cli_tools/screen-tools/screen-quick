#!/bin/bash
# Quick screen - start a screen session named after the current directory
# This preserves the working directory properly

# Get the current directory name
if [[ "$PWD" == "$HOME" ]]; then
    DIR_NAME="home"
else
    DIR_NAME=$(basename "$PWD")
fi

# Clean the directory name (remove special chars, truncate if too long)
CLEAN_DIR=$(echo "$DIR_NAME" | sed 's/[^a-zA-Z0-9_-]/-/g' | cut -c1-30)

# If we ended up with empty or just dash, use "quick"
if [[ -z "$CLEAN_DIR" || "$CLEAN_DIR" == "-" ]]; then
    CLEAN_DIR="quick"
fi

echo "ðŸ“º Starting quick screen session '${CLEAN_DIR}' in $(pwd)"

# Start screen with current directory preserved
STARTUP_DIR="$PWD"

# Method from Stack Overflow: use eval to set directory before creating window
# First create the session in detached mode
screen -d -m -S "${CLEAN_DIR}"

# Then use eval to change directory and create the initial window
screen -S "${CLEAN_DIR}" -X eval "chdir $STARTUP_DIR" "screen -t bash 0 bash"

# Kill the default window that was created
screen -S "${CLEAN_DIR}" -X select 0
screen -S "${CLEAN_DIR}" -X kill

# Now attach to the session
exec screen -r "${CLEAN_DIR}"