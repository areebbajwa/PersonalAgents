#!/bin/bash
# Start a new named screen session

if [ $# -eq 0 ]; then
    # No name provided, use directory-based name
    DIR_NAME=$(basename "$PWD")
    
    # Clean the directory name (remove special chars, truncate if too long)
    CLEAN_DIR=$(echo "$DIR_NAME" | sed 's/[^a-zA-Z0-9_-]/-/g' | cut -c1-20)
    
    # Add timestamp suffix for uniqueness (HHMM format)
    SUFFIX=$(date +%H%M)
    
    SESSION_NAME="${CLEAN_DIR}-${SUFFIX}"
    echo "ðŸ“º Creating screen session '${SESSION_NAME}' in $(pwd)"
else
    # Use provided name
    SESSION_NAME="$1"
    echo "ðŸ“º Creating screen session: ${SESSION_NAME}"
fi

# Check if session already exists
if screen -list | grep -q "\.${SESSION_NAME}"; then
    echo "Error: Session '${SESSION_NAME}' already exists!"
    echo "Active sessions:"
    screen -list
    exit 1
fi

# Start new screen session with current directory preserved
# Add logging to debug issues
STARTUP_DIR="$PWD"
LOG_FILE="/tmp/screen-new-${SESSION_NAME}.log"

echo "Starting screen session: ${SESSION_NAME}" > "$LOG_FILE"
echo "Current directory: $STARTUP_DIR" >> "$LOG_FILE"
echo "Shell: $SHELL" >> "$LOG_FILE"
echo "Date: $(date)" >> "$LOG_FILE"

# Create a wrapper script that logs and changes directory
WRAPPER_SCRIPT="/tmp/screen-wrapper-${SESSION_NAME}.sh"
cat > "$WRAPPER_SCRIPT" << EOF
#!/bin/bash
echo "Wrapper script starting..." >> "$LOG_FILE"
echo "Initial PWD: \$PWD" >> "$LOG_FILE"
cd "$STARTUP_DIR" || echo "CD failed: \$?" >> "$LOG_FILE"
echo "After CD PWD: \$PWD" >> "$LOG_FILE"
exec $SHELL -l
EOF
chmod +x "$WRAPPER_SCRIPT"

echo "Starting screen with wrapper script..." >> "$LOG_FILE"
exec screen -S "${SESSION_NAME}" "$WRAPPER_SCRIPT"