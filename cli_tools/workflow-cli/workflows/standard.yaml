name: "Standard Mode"
description: "Default AI assistant behavior"

global_rules:
  - title: "Core Principles (Apply to ALL Steps)"
    content: |
      - Do what has been asked; nothing more, nothing less
      - Be clear and concise
      - NO emojis unless requested
      - Use absolute file paths in responses, never relative paths
      - Follow the workflow steps in order

  - title: "File Operations (Apply to ALL Steps)"
    content: |
      - NEVER create files unless absolutely necessary
      - ALWAYS prefer editing existing files to creating new ones
      - NEVER proactively create documentation files (*.md) or README files
      - Never rename __init__.py files (breaks Python imports)
      - Don't rename config files referenced by scripts
      - Update references when renaming files using find/replace

  - title: "Terminal Commands (Apply to ALL Steps)"
    content: |
      - Never block terminal (2-minute max timeout)
      - Use background execution: `command > log.txt 2>&1 &`
      - Always use `&` for long operations
      - Max sleep: 119 seconds
      - Redirect output to log files
      - Check progress with `tail` (not `tail -f`)
      - Clean up temporary files

steps:
  - number: 1
    title: "Check for Mode Triggers"
    content: |
      **Actions to perform first in EVERY response:**
      
      1. Scan the user's message for mode trigger phrases:
         - Look for "task mode" anywhere in the message
         - Look for "dev mode" anywhere in the message
      
      2. If mode trigger found:
         - IMMEDIATELY execute: `workflow-cli --mode task` (for task mode)
         - IMMEDIATELY execute: `workflow-cli --mode dev` (for dev mode)
         - Stop standard workflow and switch modes
      
      3. If no mode trigger found:
         - Continue to Step 2 of standard workflow
      
      **Rules:**
      - Never ignore mode triggers - switch immediately when detected
      - Mode switching takes precedence over all other actions
      
      **Next Step:** Run `workflow-cli [--project name or --workflow file] --next` to continue
    mandatory: true

  - number: 2
    title: "Handle User Feedback IMMEDIATELY"
    content: |
      **Actions to perform before doing ANYTHING else:**
      
      1. Analyze the user's message:
         - Did user provide feedback, correction, or preference?
         - Did user suggest improvements to AI behavior?
         - Did user correct a previous response?
      
      2. If feedback detected, update appropriate file NOW:
         - General AI behavior → Update CLAUDE.md using Edit tool
         - Mode-specific behavior → Update relevant workflow files
         - Project-specific learnings → Update LEARNINGS.md
      
      3. Confirm the update:
         - State: "✅ Updated [file] with your feedback about [topic]"
         - Show what was changed
      
      4. Only AFTER updating files → Continue to Step 3
      
      **Rules:**
      - Feedback handling is mandatory and immediate
      - Never skip updating files when feedback is provided
      - Always confirm what was updated
      
      **Next Step:** Run `workflow-cli [--project name or --workflow file] --next` to continue
    mandatory: true

  - number: 3
    title: "Execute Task"
    content: |
      **Actions to perform for task execution:**
      
      1. Pre-execution information gathering:
         - Use Read, Glob, and Grep tools to check existing files/config before asking user
         - Search config/.env and data/ directories for existing API keys
         - Use available tools to verify information before making claims
         - Check todos/ directories for personal information that might answer user questions
         - Review project structure to understand context
      
      2. Task planning and execution:
         - Ask for clarification only if genuinely needed after checking resources
         - Use multiple verification methods before making definitive claims
         - Prefer existing utilities over creating new implementations
         - Use AI caching utility for any scripts making AI API calls
         - Be specific about target files, avoid overly broad search patterns
         - Execute the user's request following all global rules
      
      3. During execution:
         - Apply all global rules (file operations, terminal commands, core principles)
         - Provide progress updates for long-running operations
         - Handle errors gracefully and inform user of issues
      
      **Rules:**
      - Information gathering is mandatory before asking questions
      - Existing resources should always be checked first
      - Follow all global rules during execution
      
      **Next Step:** Run `workflow-cli [--project name or --workflow file] --next` to continue
    mandatory: true

  - number: 4
    title: "Complete and Report"
    content: |
      **Actions to perform before marking task complete:**
      
      1. Thorough testing and validation:
         - Execute end-to-end testing of all implemented functionality
         - Verify all API keys work and connections are successful
         - Test error handling and edge cases
         - Confirm all file operations completed successfully
         - NEVER mark tasks complete without successful testing
      
      2. Pre-finalization confirmation:
         - STOP and ask user for explicit confirmation before final steps
         - This includes: emails, file uploads, API submissions, deliverables
         - Never commit to git without explicit user permission
         - Never restart processes/services without user approval
         - Always pause before irreversible actions
      
      3. Final reporting and summary:
         - Provide clear summary of what was accomplished
         - Include all relevant file paths (use absolute paths only)
         - List any configuration changes made
         - Remove internal process language from external deliverables
         - Suggest logical next steps for the user
         - Document any known limitations or considerations
      
      **Rules:**
      - Testing is mandatory before completion
      - User confirmation required for final/irreversible actions
      - All file paths in reports must be absolute
      - Tasks are only complete when fully tested and demonstrated to work
      
      **Next Step:** Task complete - workflow finished, or run `workflow-cli [--project name or --workflow file] --next` for follow-up tasks
    mandatory: true

quick_reference:
  workflow_essentials:
    - "Follow steps 1-4 in order"
    - "Check for mode triggers first"
    - "Handle feedback immediately"
    - "Apply global rules to all steps"

emergency_procedures:
  - number: 1
    action: "Stop and assess the situation"
  - number: 2
    action: "Check error messages carefully"
  - number: 3
    action: "Use appropriate debugging tools"
  - number: 4
    action: "Ask user for clarification if needed"
  - number: 5
    action: "Document the issue and solution"